apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: services-pipeline
  namespace: cicd
spec:
  description: |
    This pipeline clones a git repo, builds a Docker image with Kaniko and
    pushes it to a registry    
  params:
  - name: repo-url
    type: string
  - name: pathToContext
    type: string
  - name: docker-repo
    type: string
  workspaces:
  - name: shared-data
  - name: docker-credentials
  tasks:
  - name: fetch-source
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.repo-url)
  - name: build-push-hello
    runAfter: ["fetch-source"]
    taskRef:
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: docker-credentials
    params:
    - name: IMAGE
      value: $(params.docker-repo)/helloworld:latest
    - name: CONTEXT
      value: $(params.pathToContext)/helloworld
  - name: build-push-clock
    runAfter: ["fetch-source"]
    taskRef:
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: docker-credentials
    params:
    - name: IMAGE
      value: $(params.docker-repo)/clock:latest
    - name: CONTEXT
      value: $(params.pathToContext)/clock
  - name: kn-deploy-hello
    runAfter: ["build-push-hello"]
    taskRef:
      name: kn
    params:
    - name: ARGS
      value:
      - "service"
      - "update"
      - "hello"
      - "--namespace=services"
      - "--image=$(params.docker-repo)/helloworld:latest"
      - "--env=TARGET=Tekton"
      - "--service-account=kn-deployer-account"
  - name: kn-deploy-clock
    runAfter: ["build-push-clock"]
    taskRef:
      name: kn
    params:
    - name: ARGS
      value:
      - "service"
      - "update"
      - "clock"
      - "--namespace=services"
      - "--image=$(params.docker-repo)/clock:latest"
      - "--env=TARGET=Tekton"
      - "--service-account=kn-deployer-account"